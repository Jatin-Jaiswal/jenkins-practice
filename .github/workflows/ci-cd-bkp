name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY_BACKEND: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/microservices-backend
  ECR_REPOSITORY_FRONTEND: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/microservices-frontend
  K8S_NAMESPACE: microservices

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build and push backend Docker image
      run: |
        docker build -t $ECR_REPOSITORY_BACKEND:${{ github.run_number }} server
        docker push $ECR_REPOSITORY_BACKEND:${{ github.run_number }}

    - name: Build and push frontend Docker image
      run: |
        docker build -t $ECR_REPOSITORY_FRONTEND:${{ github.run_number }} client
        docker push $ECR_REPOSITORY_FRONTEND:${{ github.run_number }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'latest'

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name microservices-eks-cluster

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f server/server-deployment.yaml
        kubectl apply -f server/server-service.yaml
        kubectl apply -f client/client-deployment.yaml
        kubectl apply -f client/client-service.yaml
        # Add your MongoDB and secret YAMLs if needed
